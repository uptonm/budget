// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DB_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    accounts     Account[]
    sessions     Session[]
    transactions Transaction[]
    categories   Category[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum CategoryOwnerType {
    USER
    SYSTEM
}

model Category {
    id          String            @id @default(cuid())
    name        String
    description String?
    type        TransactionType
    ownerId     String
    ownerType   CategoryOwnerType

    transactions Transaction[]
    owner        User          @relation(fields: [ownerId], references: [id])

    @@unique([name, type, ownerType, ownerId])
    @@index([ownerId])
}

enum TransactionType {
    EXPENSE
    SAVINGS
    INCOME
}

enum TransactionFrequency {
    DAILY
    WEEKLY
    BI_WEEKLY
    MONTHLY
    QUARTERLY
    YEARLY
}

model Transaction {
    id          String               @id @default(cuid())
    name        String
    description String?
    amount      Float
    type        TransactionType
    date        DateTime
    frequency   TransactionFrequency
    categoryId  String
    userId      String
    isProjected Boolean              @default(false)

    Category Category @relation(fields: [categoryId], references: [id])
    User     User     @relation(fields: [userId], references: [id])

    @@index([categoryId])
    @@index([userId])
}
